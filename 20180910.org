** 指针和二维数组
int b[M][10];
int (*p)[10];
p = b;



** 4.3 引用

引用是一个变量的别名，它自动的适用于与间接访问运算符 *， 但引用变量中的值（地址值）是不能改变的。

int x;
int &y = x;
y 是引用，是x的别名

+ 由于引用变量在初始化的时别设定了某一变量的地址后就不能在改变了，因此在程序中定义引用变量是必须要初始化。

+ 指针变量的值可以改变，但引用变量不行。
+ 指针既可以对值也可以对地址进行操作。

引用的应用
+ 引用可以做函数参数。
+ 引用的返回值可以是引用。

** 4.4 内存的申请与释放
+ new
+ delete
不需要任何头文件

* 函数

** 函数返回简单变量的指针


函数的递归调用

任何一个递归函数都是有两部分组成的

** 5.6 变量的作用于和存储类
+ 块作用域
+ 文件作用域
在函数外部定义的变量具有文件作用域，也就是从其定义的位置开始到整个文件结束都有效。


*** 5.6.2 变量的存储类
+ auto 存储类
+ static 存储类
+ register 存储类
+ extern 存储类


