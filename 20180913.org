** 5.7 无参函数和缺省(默认)参数
要想使用缺省参数值， 必须在函数说明是来指定缺省参数的值，而函数的定义不发生任何变化。
+ 给定值得话必须从右向左给，在调用时对于那些没有指定缺省参数值得参数，必须要提供参数值
+ 当调用出现在定义之前，默认形参值必须在函数原型(说明)中给出，而当函数调用出现在函数定义之后时，默认形参值在函数定义的形参表中给出即可。
+ 在使用默认形参是，需要注意默认形参的作用域。在相同的作用域内，默认形参值的说明应保持唯一，但如果不在相同的作用域内，则允许说明不同的默认形参。

** 5.8 函数的重载
+ 在一般的程序设计语言中，1一个函数终不能出现重名的函数。如果在一个程序中可以具有多个重名的函数，则被称为函数的重载(overloading)。
在C++，中
要求函数的参数个数，或者参数类型不同即可。
如果使用函数重载，就可以利用相同的函数名来描述具有相同概念的程序段。
+ 函数的返回值类型不能作为可否重载的判断条件。
  在没有调用之前，无法判断调用的是哪个函数。
+ 当函数的重载与函数的缺省参数一起使用时，有可能引起函数重载的非法定义。
  由于缺省参数的原因，进行调用时无法确定应调用那个函数。
** 5.9 inline函数 内联/  内嵌函数
编译时把该函数的程序代码插入到调用该函数的语句所在的位置上，一遍程序执行是不再进行函数调用，作用于宏定义相似。
+ inline 可以避免带来的宏副作用
+ 一般函数的实体只有一个，而inline 函数在每个调用位置上都有一个函数的靠背
+ 一般函数调用时需要额外开销
+ 一般函数发生变化是，只需重新编译该函数的源文件即可，inline发生变化是，所有调用该函数的源文件都必须重新编译
+ 设置inline函数的目的是为了消除函数调用时的系统开销
(不是所有的inline都能作为inline函数处理，系统将根据函数大小来决定是否作为inline函数处理，同时，没有inline修饰也可能被编译成内嵌函数)
** 5.10 外部函数和静态函数
若希望一个函数只在他所定义的文件中有效，则可以将此函数定义为静态函数。
static
* 类
C++特有的部分
+ 只要变量在使用之前定义即可
+ 变量的引用 和简单变量一样，意义和指针相同
+ C++中函数的缺省参数 不需要将所有参数给出
+ inline函数 与宏定义相似 能解决宏定义的副作用
+ bool类型
** 6.1 类的定义
面向对象程序设计的主要工作就是对类的设计
类的定义相当于定义一种数据类型，而对象是类的实例。类与对象的关系相当于数据类型与变量之间的关系。
#+BEGIN_SRC C++
class 类型名
{
  数据成员;
  成员函数;
};
class cInt{
  int x;
int xRet() { return x;}
};
#+END_SRC
数据成员是类中所包含的变量，用于表示某种数据结构，而成员函数则用与对数据成员进行操作的函数。

#+BEGIN_SRC C++
cInt v;
int num;
v.x = 1;
num = v.xRet();
#+END_SRC
** 6.2 公共，私有和保护 -- 封装 Encapsulation
+ public 公共的
数据成员和成员函数是共有的，所有的函数都可以访问成员。
+ private 
只有该类的成员函数和友元再能访问这些成员。
+ protected 
可以有派生类(通过继承而生成的类)的成员函数来访问。

*** 注意事项
+ 在定义类时，一般将数据成员定义为private,以防止来自外部的任意访问。
将成员函数定义为public，使之可以被外部调用。
+ 在定义类时，最初的private挂念自可以省略。

在一个类的定义中，用于设置访问权限的public,private,protected 可以出现任意次, 没有顺序要求。
** 数据成员和成员函数
*** 6.3.1 成员函数的使用
+ 调用类中的函数也需要给出参数
+ 实参类型同形参类型要一致
+ 在访问类中的成员函数是,一定要注意其访问控制权限。
*** 6.3.2 成员函数的内部定义和外部定义
+ 内部定义
在类中给出函数说明的同时给出器函数实体部分的定义

特点:在类中定义的函数长度都比较短，内部定义的韩式被默认为实inline函数。
+ 外部定义
在类中只给出声明
#+BEGIN_SRC C++
void cPerson::disp(){

}
#+END_SRC
:: 作用域限定运算符，表示disp()函数是属于cPerson类的。
不加:: --> 全局函数
*** 6.3.3 数据成员的保护
指通过访问权限控制来限制对数据成员的非法访问。
保证变量的值是有意义的。
** 6.4 构造函数和析构函数
+ 在定义对象时如果不同时指定对象中变量处置的换，数据成员的值不定
+ 味蕾在定义的同时为数据成员赋初值 -- 构造函数
+ 在为对象释放后进行一些后处理 -- 析构函数
*** 6.4.1 构造函数
  + 构造函数的名字与类名相同
  + 构造函数只适用于为数据成员设置初始值而没有返回值
  + 构造函数是在生成类对象是自动调用
  + 构造函数没有参数 缺省构造函数
+  有参数的构造函数
构造函数有参数后，可以为数据成员赋任意的初值。
+ 构造函数的显示调用
一般为隐式调用
+ 构造函数的重载



